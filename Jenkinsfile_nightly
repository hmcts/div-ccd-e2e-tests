#!groovy
properties([
        [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/div-ccd-e2e-tests.git'],
        pipelineTriggers([cron('00 22 * * *')]),
        parameters([
                string(name: 'RUNNING_ENV', defaultValue: 'aat', description: 'CNP Environment to Run Tests in')
        ])
])

@Library("Infrastructure")

def product = "div"
def component = "ccd-e2e"

node {
    ws('workspace/div-ccd-e2e-tests') {
        stage('Checkout') {
            deleteDir()
            checkout scm
        }

        stage('Env Setup') {
            withSubscription('nonprod') {
                def az = { cmd -> return sh(script: "env AZURE_CONFIG_DIR=/opt/jenkins/.azure-${env.SUBSCRIPTION_NAME} az ${cmd}", returnStdout: true).trim() }

                env.PROF_USER_EMAIL =  az('keyvault secret show --vault-name div-aat --name ccd-e2e-solicitor-email --query value -o tsv').trim()
                env.PROF_USER_PASSWORD =  az('keyvault secret show --vault-name div-aat --name ccd-e2e-solicitor-password --query value -o tsv').trim()
                env.CCD_CASEWORKER_E2E_EMAIL =  az('keyvault secret show --vault-name div-aat --name ccd-e2e-caseworker-email --query value -o tsv').trim()
                env.CCD_CASEWORKER_E2E_PASSWORD =  az('keyvault secret show --vault-name div-aat --name ccd-e2e-caseworker-password --query value -o tsv').trim()
                env.IDAM_CLIENT_SECRET =  az('keyvault secret show --vault-name div-aat --name idam-secret --query value -o tsv').trim()
                env.SERVICE_SECRET =  az('keyvault secret show --vault-name div-aat --name ccd-submission-s2s-auth-secret --query value -o tsv').trim()
            }
        }

        stage('Journey Tests') {
            try {
                sh 'yarn install'
                sh 'yarn test'
            }
            catch (Exception err) {
                currentBuild.result = 'UNSTABLE'
                echo "RESULT: ${currentBuild.result}"
            } finally {
                archiveArtifacts 'functional-output/**/*'
            }

        }

        stage('After run') {
            echo "finished"
        }

    }
    deleteDir()
}
